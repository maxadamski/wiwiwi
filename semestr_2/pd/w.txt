co2gi([_, B], [B]).
co2gi([_], []).
co2gi([_ , A | O], [A| X]) :- co2gi(O, X).

obcinaj([_], []).
obcinaj([H | T], [H| T2]) :- obcinaj(T, T2).

nakoniec(N, [], [N]).
nakoniec(N, [H | T], [H| T2]) :- nakoniec(N, T, T2).

ostatni([A], A).
ostatni([_| A], F) :- ostatni(A, F).

przedostatni([A, _], A).
przedostatni([_| A], F) :- przedostatni(A, F).

odwracaj([], []).
odwracaj([H| T], W) :- odwracaj(T, G), append(G,[H],W).

srodek([A], A).
srodek([_| T], W) :-  append(S, [_], T), srodek(S, W).

palindrom([]).
palindrom([_]).
palindrom([H | T]) :- append(M,[H] , T), palindrom(M).

polowki([], [], []).
polowki([H | T], [H | XT], Y) :- append(M, [K], T), append(Y2 , [K], Y), polowki(M, XT, Y2).

subsetord([], _).
subsetord([H | T], [H| T2]) :- subsetord( T, T2).
subsetord([H | T], [H2 | T2]) :- H \= H2, subsetord([H | T], T2).

kompresja([A], [A]).
kompresja([H|[H2 | T]] , [H | T3]) :- H\= H2, kompresja([H2 | T], T3).
kompresja([H| T], [H| T2]) :- kompresja(T, [H| T2]).

pnp([], [], []).
pnp([H | T], [H | P2], NP) :- H mod 2 =:= 0 ,pnp(T, P2, NP).
pnp([H | T], P, [H | NP]) :- H mod 2 =:= 1 ,pnp(T, P, NP).

maxlist([A], A).
maxlist([H | T], X) :- maxlist(T, A), H >= A, X = H.
maxlist([H | T], X) :- maxlist(T, A), H < A, X = A.

nstart(0, _, []).
nstart(N, [H | T], [H | TW]) :- N2 is N - 1, nstart(N2, T, TW).

podziel([], [], []).
podziel([H | T], S ,[P1 | X2]) :- nstart(H, S, P1), append(P1, P2, S), podziel(T, P2, X2).

wstawiaj(A, [], [A]).
wstawiaj(A, [H | T], [A | [H | T]]) :- A < H.
wstawiaj(A, [H | T], [H | T2]) :- A >= H, wstawiaj(A, T, T2).



wstawsort([], []).
wstawsort([H | T], X) :- wstawsort(T, TX), wstawiaj(H, TX, X).

zamien([X], [X]).
zamien([H | [H2 | T]], [H2 | [H | T]]) :- H >= H2.
zamien([H | [H2 | T]], [H | T2]) :- H < H2, zamien([H2 | T], T2).

babel(T, T) :- zamien(T, T2), T = T2, !.
babel(T, X) :- zamien(T, T2), babel(T2, X).

split(_, [], [], []).
split(X, [HA|TA], [HA | M], N) :- HA < X, split(X, TA, M, N).
split(X, [HA|TA], M, [HA | N]) :- HA >= X, split(X, TA, M, N).

kwik([], []).
kwik(P, A) :- P = [H|T], split(H, T, M, N), kwik(M, M2), kwik(N, N2), append(M2, [H], MH2), append(MH2, N2, A).

diff(_, A, [], [A]).
diff(N ,A, [H | T], [A | [H | T]]) :- V is abs(N - A), V2 is abs(H - N), V < V2.
diff(N, A, [H | T], [H | T2]) :- V is abs(N - A), V2 is abs(H - N), V >= V2, diff(N, A, T, T2).

sortdiff(_, [], []).
sortdiff(N, [H| T], X) :- sortdiff(N, T, TX), diff(N, H, TX, X).

unikalne([], []).
unikalne([H | T], X) :- member(H, T), !, unikalne(T, X).
unikalne([H | T], [H | T2]) :- unikalne(T, T2).

uniq(A, [], [A]).
uniq(A, [H | T], [A | [H | T]]) :- unikalne(A, AU), length(AU, V), unikalne(H, HU), length(HU, V2), V < V2.
uniq(A, [H | T], [H | T2]) :- unikalne(A, AU), length(AU, V), unikalne(H, HU), length(HU, V2), V >= V2, uniq(A, T, T2).

uniqsort([], []).
uniqsort([H | T], X) :- uniqsort(T, TX), uniq(H, TX, X).
